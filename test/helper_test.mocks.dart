// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_bloc_timer_trigger/test/helper_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_bloc_timer_trigger/repositories/fake_repository.dart'
    as _i4;
import 'package:flutter_bloc_timer_trigger/utils/timer_ticker.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TimerTicker].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimerTicker extends _i1.Mock implements _i2.TimerTicker {
  @override
  _i3.Stream<int> tick({
    required Duration? period,
    required int? ticks,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #tick,
          [],
          {
            #period: period,
            #ticks: ticks,
          },
        ),
        returnValue: _i3.Stream<int>.empty(),
        returnValueForMissingStub: _i3.Stream<int>.empty(),
      ) as _i3.Stream<int>);
}

/// A class which mocks [FakeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFakeRepository extends _i1.Mock implements _i4.FakeRepository {
  @override
  _i3.Future<void> fetchData() => (super.noSuchMethod(
        Invocation.method(
          #fetchData,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
